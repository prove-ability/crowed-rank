# -----------------------------------------------
# 커밋 메시지 형식:
# <type>(<scope>): <subject>
#
# 1. type: 커밋 목적 (아래 유형 참고)
# 2. scope: 영향받은 모듈/기능명 (선택적)
# 3. subject: 50자 이내 요약, 동사 원형으로 시작, 마침표 X
# -----------------------------------------------

# 예시:
# feat(auth): 사용자 로그인 기능 추가
# fix(event): 이벤트 새로고침 오류 수정
# docs(readme): 프로젝트 소개 문서 작성
# style(button): 버튼 정렬 CSS 수정
# refactor(api): API 요청 로직 구조 개선
# test(user): 유저 관련 유닛 테스트 추가
# chore(deps): 패키지 버전 업데이트

# -----------------------------------------------
# 커밋 타입 정리

# feat     : 새로운 기능 추가
# fix      : 버그 수정
# docs     : 문서 수정 (README 등)
# style    : 코드 스타일 변경 (기능 영향 없음)
# refactor : 코드 리팩토링 (기능 변화 없음)
# test     : 테스트 추가 또는 수정
# chore    : 빌드/설정/패키지 등 기타 작업
# perf     : 성능 개선
# ci       : CI 관련 설정 변경
# build    : 빌드 시스템 관련 변경 (예: vite, vercel 설정 등)
# revert   : 이전 커밋 되돌리기

# -----------------------------------------------
# 제목(한 줄 요약)

# 본문 (선택)
# 무엇을, 왜 변경했는지 서술합니다. 줄바꿈 가능.
# 예: 특정 라이브러리의 버그 때문에 fallback 처리 추가

# 꼬리말 (선택)
# 관련 이슈를 자동으로 닫을 수 있습니다.
# 예: Closes #42, Fixes #10
